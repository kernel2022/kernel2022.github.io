<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kernel2022.github.io</id>
    <title>贾献华 2022</title>
    <updated>2022-01-01T16:58:16.777Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kernel2022.github.io"/>
    <link rel="self" href="https://kernel2022.github.io/atom.xml"/>
    <subtitle>及时当勉励，岁月不待人。</subtitle>
    <logo>https://kernel2022.github.io/images/avatar.png</logo>
    <icon>https://kernel2022.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 贾献华 2022</rights>
    <entry>
        <title type="html"><![CDATA[《Rust 编程第一课》学习笔记]]></title>
        <id>https://kernel2022.github.io/post/rust/</id>
        <link href="https://kernel2022.github.io/post/rust/">
        </link>
        <updated>2022-01-01T15:16:06.000Z</updated>
        <summary type="html"><![CDATA[<p>Happy New Year! 🇨🇳</p>
<h2 id="开篇词让rust成为你的下一门主力语言">开篇词｜让Rust成为你的下一门主力语言</h2>
<p>首先，你使用起来就会感受到，Rust 是一门非常重视开发者用户体验的语言。<br>
其次，众所周知的优异性能和强大的表现力，让 Rust 在很多场合都能够施展拳脚。<br>
<img src="https://kernel2022.github.io/post-images/1641050876780.webp" alt="usage" loading="lazy"><br>
最后，Rust 会越用越享受。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Happy New Year! 🇨🇳</p>
<h2 id="开篇词让rust成为你的下一门主力语言">开篇词｜让Rust成为你的下一门主力语言</h2>
<p>首先，你使用起来就会感受到，Rust 是一门非常重视开发者用户体验的语言。<br>
其次，众所周知的优异性能和强大的表现力，让 Rust 在很多场合都能够施展拳脚。<br>
<img src="https://kernel2022.github.io/post-images/1641050876780.webp" alt="usage" loading="lazy"><br>
最后，Rust 会越用越享受。</p>
<!-- more -->
<h3 id="学习-rust-的难点">学习 Rust 的难点</h3>
<p>Rust 被公认是很难学的语言，学习曲线很陡峭。<br>
所以如果你想从其他语言迁移到 Rust，必须要经过一段时期的思维转换（Paradigm Shift）。<br>
而 Rust 中最大的思维转换就是变量的所有权和生命周期，这是几乎所有编程语言都未曾涉及的领域。</p>
<ul>
<li>C 开发者，难点是类型系统和泛型编程；</li>
<li>C++ 开发者，难点主要在类型系统；</li>
<li>Python/Ruby/JavaScript 开发者，难点在并发处理，类型系统及泛型编程；</li>
<li>Java 开发者，难点在异步处理和并发安全的理解上；</li>
<li>Swift 开发者，几乎没有额外的难点，深入理解 Rust 异步处理即可。</li>
</ul>
<h3 id="如何学好-rust">如何学好 Rust？</h3>
<ul>
<li>精准学习</li>
<li>刻意练习<br>
<img src="https://kernel2022.github.io/post-images/1641051228336.webp" alt="practise" loading="lazy"></li>
</ul>
<h2 id="前置篇-3讲">前置篇 (3讲)</h2>
<h3 id="01内存值放堆上还是放栈上这是一个问题">01｜内存：值放堆上还是放栈上，这是一个问题</h3>
<p><code>let s = &quot;hello world&quot;.to_string();</code><br>
<img src="https://kernel2022.github.io/post-images/1641052903619.jpg" alt="" loading="lazy"></p>
<h4 id="栈">栈</h4>
<p>栈是程序运行的基础。每当一个函数被调用时，一块连续的内存就会在栈顶被分配出来，这块内存被称为帧（frame）。<br>
<img src="https://kernel2022.github.io/post-images/1641052963568.webp" alt="" loading="lazy"></p>
<h4 id="堆">堆</h4>
<p>栈虽然使用起来很高效，但它的局限也显而易见。当我们需要动态大小的内存时，只能使用堆，比如可变长度的数组、列表、哈希表、字典，它们都分配在堆上。<br>
<img src="https://kernel2022.github.io/post-images/1641053000641.webp" alt="" loading="lazy"></p>
<ul>
<li>栈上存放的数据是静态的，固定大小，固定生命周期；</li>
<li>堆上存放的数据是动态的，不固定大小，不固定生命周期。</li>
</ul>
<h2 id="基础篇-21讲">基础篇 (21讲)</h2>
<h2 id="期中周-2讲">期中周 (2讲)</h2>
<h2 id="进阶篇-11讲">进阶篇 (11讲)</h2>
<h2 id="并发篇-11讲">并发篇 (11讲)</h2>
<h2 id="实战篇-7讲">实战篇 (7讲)</h2>
<h2 id="结束语-2讲">结束语 (2讲)</h2>
<h2 id="参考">参考：</h2>
<ul>
<li><a href="https://time.geekbang.org/column/article/408400">陈天 · Rust 编程第一课</a></li>
<li><a href="https://github.com/tyrchen/geektime-rust">GitHub</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://kernel2022.github.io/post/hello-gridea/</id>
        <link href="https://kernel2022.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>